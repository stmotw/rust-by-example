[workspace]
resolver = "2"

members = [
    "practice_1_hello",
    "practice_1_1_comments",
    "practice_1_2_formatted_print",
    "practice_1_2_1_debug",
    "practice_1_2_2_display",
    "practice_1_2_2_1_list",
    "practice_1_2_3_formatting",
    "practice_2_primitives",
    "practice_2_1_literals",
    "practice_2_2_tuples",
    "practice_2_3_arrays_and_slices",
    "practice_3_1_structures",
    "practice_3_2_enums",
    "practice_3_2_1_use",
    "practice_3_2_2_c_like",
    "practice_3_2_3_linked_list",
    "practice_3_3_constants",
    "practice_4_variable_bindings",
    "practice_4_1_mutability",
    "practice_4_2_scope_and_shadowing",
    "practice_4_3_declare_first",
    "practice_4_4_freezing",
    "practice_5_1_casting",
    "practice_5_2_literals",
    "practice_5_3_inference",
    "practice_5_4_aliasing",
    "practice_6_1_from_and_into",
    "practice_6_2_tryfrom_and_tryinto",
    "practice_6_3_to_and_from_strings",
    "practice_7_expressions",
    "practice_8_1_if_else",
    "practice_8_2_loop",
    "practice_8_2_1_nesting_and_labels",
    "practice_8_2_2_returning_from_loops",
    "practice_8_3_while",
    "practice_8_4_for_and_range",
    "practice_8_5_match",
    "practice_8_5_1_1_tuples",
    "practice_8_5_1_2_arrays_slices",
    "practice_8_5_1_3_enums",
    "practice_8_5_1_4_pointers_ref",
    "practice_8_5_1_5_structs",
    "practice_8_5_2_guards",
    "practice_8_5_3_binding",
    "practice_8_6_if_let",
    "practice_8_7_let_else",
    "practice_8_8_while_let",
    "practice_9_functions",
    "practice_9_1_methods",
    "practice_9_2_closures",
    "practice_9_2_1_capturing",
    "practice_9_2_2_as_input_parameters",
    "practice_9_2_3_type_anonymity",
    "practice_9_2_4_input_functions",
    "practice_9_2_5_as_output_parameters",
    "practice_9_2_6_1_iterator_any",
    "practice_9_2_6_2_searching",
    "practice_9_3_higher_order_functions",
    "practice_9_4_diverging_functions",
    "practice_10_1_visibility",
    "practice_10_2_struct_visibility",
    "practice_10_3_the_use_declaration",
    "practice_10_4_super_and_self",
    "practice_10_5_file_hierarchy",
    "practice_11_1_creating_a_library",
    "practice_11_2_using_a_library",
    "practice_14_generics",
    "practice_14_1_functions",
    "practice_14_2_implementation",
    "practice_14_3_traits",
    "practice_14_4_bounds",
    "practice_14_4_1_empty_bounds",
    "practice_14_5_multiple_bounds",
    "practice_14_6_where_clauses",
    "practice_14_7_new_type_idiom",
    "practice_14_8_1_the_problem",
    "practice_14_8_2_associated_types",
    "practice_14_9_phantom_type_parameters",
    "practice_14_9_1_unit_clarification",
    "practice_16_traits",
    "practice_16_1_derive",
    "practice_16_2_returning_traits_with_dyn",
    "practice_16_3_operator_overloading",
    "practice_16_4_drop",
    "practice_16_5_iterators",
    "practice_16_6_impl_trait",
    "practice_16_7_clone",
    "practice_16_8_supertraits",
    "practice_16_9_disambiguating",
    "practice_19_1_box_stack_and_heap", 
    "practice_19_2_vectors",
    "practice_19_3_strings",
    "practice_19_4_option",
]
